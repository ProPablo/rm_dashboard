{
  "swagger": "2.0",
  "info": {
    "description": "This is API documentation for Redland Museum's DIGS administration portal",
    "version": "1.0.0",
    "title": "Swagger Redland Museum",
    "contact": {
      "email": "tyronewessnolasco@gmail.com"
    }
  },
  "host": "rm.kongroo.xyz",
  "basePath": "/",
  "tags": [
    {
      "name": "login",
      "description": "Getting bearer token (NOTE: insert Bearer into Authorise prompt before inserting token)"
    },
    {
      "name": "artefacts",
      "description": "Everything concerning artefacts"
    },
    {
      "name": "zones",
      "description": "Everything concerning zones"
    },
    {
      "name": "beacons",
      "description": "Everything concerning beacons"
    },
    {
      "name": "exhibitions",
      "description": "Everything concerning exhibitions"
    },
    {
      "name": "storeItems",
      "description": "Everything concerning storeItems"
    },
    {
      "name": "medias",
      "description": "Everything concerning medias"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/login": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "Logs in and provides a bearer token",
        "description": "",
        "operationId": "login",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Logging in using credentials",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/artefacts": {
      "get": {
        "tags": [
          "artefacts"
        ],
        "summary": "List all artefacts",
        "description": "",
        "operationId": "listArtefacts",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "404": {
            "description": "Artefacts not found"
          }
        }
      },
      "post": {
        "tags": [
          "artefacts"
        ],
        "summary": "Add a new artefact to the list",
        "description": "",
        "operationId": "addArtefacts",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Artefact that needs to be added to the list",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Artefact"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/artefacts/{id}": {
      "get": {
        "tags": [
          "artefacts"
        ],
        "summary": "Find artefact by ID",
        "description": "Returns a single artefact",
        "operationId": "getArtefactById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of artefact to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Artefact"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Artefact not found"
          }
        }
      },
      "put": {
        "tags": [
          "artefacts"
        ],
        "summary": "Updates a artefact with form data",
        "description": "Updates artefact",
        "operationId": "updateArtefactWithForm",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "formData",
            "description": "ID of the to be updated artefact",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "Updated name of the artefact",
            "required": true,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "Updated description of the artefact",
            "required": false,
            "type": "string"
          },
          {
            "name": "acquisitionDate",
            "in": "formData",
            "description": "Updated acquisition date of the artefact",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "createdAt",
            "in": "formData",
            "description": "Updated create date of the artefact entry",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "updatedAt",
            "in": "formData",
            "description": "Updated update date of artefact entry",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "thumbnail",
            "in": "formData",
            "description": "Updated image of the artefact in base64",
            "required": false,
            "type": "string",
            "format": "base64"
          },
          {
            "name": "coordX",
            "in": "formData",
            "description": "Updated x coordinate of the artefact in base64",
            "required": false,
            "type": "integer",
            "format": "base64"
          },
          {
            "name": "coordY",
            "in": "formData",
            "description": "Updated y coordinate of the artefact in base64",
            "required": false,
            "type": "integer",
            "format": "base64"
          },
          {
            "name": "zone",
            "in": "formData",
            "description": "Updated zone ID of artefact",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "artefacts"
        ],
        "summary": "Deletes a artefact",
        "description": "",
        "operationId": "deleteArtefact",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Artefact id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Artefact not found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/zones": {
      "get": {
        "tags": [
          "zones"
        ],
        "summary": "List all zones",
        "description": "",
        "operationId": "listZones",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "404": {
            "description": "Zones not found"
          }
        }
      },
      "post": {
        "tags": [
          "zones"
        ],
        "summary": "Add a new zone to the list",
        "description": "",
        "operationId": "addZones",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Zones that needs to be added to the list",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Zone"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/zones/{id}": {
      "get": {
        "tags": [
          "zones"
        ],
        "summary": "Find zone by ID",
        "description": "Returns a single zones",
        "operationId": "getZonesById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of zone to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Zone"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Zone not found"
          }
        }
      },
      "put": {
        "tags": [
          "zones"
        ],
        "summary": "Updates a zone with form data",
        "description": "",
        "operationId": "updateZonesWithForm",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "formData",
            "description": "ID of the to be updated zone",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "Updated name of the zone",
            "required": true,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "Updated description of the zone",
            "required": false,
            "type": "string"
          },
          {
            "name": "coordX",
            "in": "formData",
            "description": "Updated x coordinate of the artefact in base64",
            "required": false,
            "type": "integer",
            "format": "base64"
          },
          {
            "name": "coordY",
            "in": "formData",
            "description": "Updated y coordinate of the artefact in base64",
            "required": false,
            "type": "integer",
            "format": "base64"
          },
          {
            "name": "createdAt",
            "in": "formData",
            "description": "Updated create date of the zone entry",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "updatedAt",
            "in": "formData",
            "description": "New update date of zone entry",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "zones"
        ],
        "summary": "Deletes a zone",
        "description": "",
        "operationId": "deleteZone",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Zone id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Zone not found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/beacons": {
      "get": {
        "tags": [
          "beacons"
        ],
        "summary": "List all beacons",
        "description": "",
        "operationId": "listBeacons",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "404": {
            "description": "Beacons not found"
          }
        }
      },
      "post": {
        "tags": [
          "beacons"
        ],
        "summary": "Add a new beacon to the list",
        "description": "",
        "operationId": "addBeacons",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Beacons that needs to be added to the list",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Beacon"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/beacon/{id}": {
      "get": {
        "tags": [
          "beacons"
        ],
        "summary": "Find beacon by ID",
        "description": "Returns a single beacons",
        "operationId": "getBeaconsById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of beaocn to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Beacon"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Beacon not found"
          }
        }
      },
      "put": {
        "tags": [
          "beacons"
        ],
        "summary": "Updates a beacon with form data",
        "description": "",
        "operationId": "updateBeaconsWithForm",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "formData",
            "description": "ID of the to be updated beacon",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "Updated name of the beacon",
            "required": true,
            "type": "string"
          },
          {
            "name": "visits",
            "in": "formData",
            "description": "Updated visits of the beacon",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "activation",
            "in": "formData",
            "description": "Updated activation of the beacon",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "createdAt",
            "in": "formData",
            "description": "Updated create date of the beacon entry",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "updatedAt",
            "in": "formData",
            "description": "New update date of beacon entry",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "beacons"
        ],
        "summary": "Deletes a beacon",
        "description": "",
        "operationId": "deleteBeacon",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Beacon id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Beacon not found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/exhibitions": {
      "get": {
        "tags": [
          "exhibitions"
        ],
        "summary": "List all exhibitions",
        "description": "",
        "operationId": "listExhibitions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "404": {
            "description": "Exhibitions not found"
          }
        }
      },
      "post": {
        "tags": [
          "exhibitions"
        ],
        "summary": "Add a new exhibition to the list",
        "description": "",
        "operationId": "addExhibitions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Exhibition that needs to be added to the list",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Exhibition"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/exhibitions/{id}": {
      "get": {
        "tags": [
          "exhibitions"
        ],
        "summary": "Find exhibition by ID",
        "description": "Returns a single exhibition",
        "operationId": "getExhibitionById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of exhibition to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Exhibition"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Exhibition not found"
          }
        }
      },
      "put": {
        "tags": [
          "exhibitions"
        ],
        "summary": "Updates a exhibition with form data",
        "description": "",
        "operationId": "updateExhibitionsWithForm",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "formData",
            "description": "ID of the to be updated exhibition",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "Updated name of the exhibition",
            "required": true,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "Updated description of the exhibition",
            "required": false,
            "type": "string"
          },
          {
            "name": "organiser",
            "in": "formData",
            "description": "Updated organiser of the exhibition",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "priceAdult",
            "in": "formData",
            "description": "Updated adult price of the exhibition",
            "required": false,
            "type": "integer",
            "format": "double"
          },
          {
            "name": "priceConcession",
            "in": "formData",
            "description": "Updated concession price of the exhibition",
            "required": false,
            "type": "integer",
            "format": "double"
          },
          {
            "name": "priceChild",
            "in": "formData",
            "description": "Updated child price of the exhibition",
            "required": false,
            "type": "integer",
            "format": "double"
          },
          {
            "name": "startDate",
            "in": "formData",
            "description": "Updated start date of the exhibition",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "finishDate",
            "in": "formData",
            "description": "Updated finish date of exhibition",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "createdAt",
            "in": "formData",
            "description": "Updated create date of the exhibition entry",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "updatedAt",
            "in": "formData",
            "description": "New update date of exhibition entry",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "thumbnail",
            "in": "formData",
            "description": "Updated thumbnail of the exhibition in base64",
            "required": false,
            "type": "string",
            "format": "base64"
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "exhibitions"
        ],
        "summary": "Deletes a exhibition",
        "description": "",
        "operationId": "deleteExhibition",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Exhibition id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Exhibition not found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/storeItems": {
      "get": {
        "tags": [
          "storeItems"
        ],
        "summary": "List all store items",
        "description": "",
        "operationId": "listStoreItems",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "404": {
            "description": "Store items not found"
          }
        }
      },
      "post": {
        "tags": [
          "storeItems"
        ],
        "summary": "Add a new store item to the list",
        "description": "",
        "operationId": "addStoreItem",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Store item that needs to be added to the list",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StoreItem"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/storeItems/{id}": {
      "get": {
        "tags": [
          "storeItems"
        ],
        "summary": "Find store item by ID",
        "description": "Returns a single store item",
        "operationId": "getStoreItemById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of store item to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StoreItem"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Store item not found"
          }
        }
      },
      "put": {
        "tags": [
          "storeItems"
        ],
        "summary": "Updates a store item with form data",
        "description": "",
        "operationId": "updateStoreItemsWithForm",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "formData",
            "description": "ID of the to be updated store item",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "Updated name of the store item",
            "required": true,
            "type": "string"
          },
          {
            "name": "cost",
            "in": "formData",
            "description": "Updated cost of the store item",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "inStock",
            "in": "formData",
            "description": "Updated stock status of the store item",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "createdAt",
            "in": "formData",
            "description": "Updated create date of the store item entry",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "updatedAt",
            "in": "formData",
            "description": "New update date of store item entry",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "thumbnail",
            "in": "formData",
            "description": "Updated thumbnail of the store item in base64",
            "required": false,
            "type": "string",
            "format": "base64"
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "storeItems"
        ],
        "summary": "Deletes a store item",
        "description": "",
        "operationId": "deleteStoreItem",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Store item id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Store item not found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/artefactmedia": {
      "get": {
        "tags": [
          "medias"
        ],
        "summary": "List all medias",
        "description": "",
        "operationId": "listMedias",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "404": {
            "description": "Medias not found"
          }
        }
      },
      "post": {
        "tags": [
          "medias"
        ],
        "summary": "Add a new media to the list",
        "description": "",
        "operationId": "addMedias",
        "consumes": [
          "application/json",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "title",
            "description": "Title of media to be uploaded",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "type",
            "type": "integer",
            "description": "1 - image, 2 - video",
            "enum": [
              1,
              2
            ]
          },
          {
            "in": "formData",
            "name": "artefactId",
            "description": "Zone ID of media to be uploaded",
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "file",
            "in": "formData",
            "description": "Image being uploaded as media",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/artefactmedia/{id}": {
      "get": {
        "tags": [
          "medias"
        ],
        "summary": "Find media by ID",
        "description": "Returns a single media item",
        "operationId": "getMediaById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of media to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Medias"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Media not found"
          }
        }
      },
      "put": {
        "tags": [
          "medias"
        ],
        "summary": "Updates a media with form data",
        "description": "",
        "operationId": "updateStoreItemsWithForm",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "formData",
            "description": "ID of the to be updated media",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "title",
            "in": "formData",
            "description": "Updated name of the media",
            "required": true,
            "type": "string"
          },
          {
            "name": "artefactId",
            "in": "formData",
            "description": "Updated artefact id of media",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "Image",
            "in": "formData",
            "description": "Updated image of medias",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "medias"
        ],
        "summary": "Deletes a media",
        "description": "",
        "operationId": "deleteMedia",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Media id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Media not found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "definitions": {
    "Artefact": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "acquisitionDate": {
          "type": "string",
          "format": "date-time"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "coordX": {
          "type": "number"
        },
        "coordY": {
          "type": "number"
        },
        "zoneId": {
          "type": "number"
        },
        "thumbnail": {
          "type": "string",
          "format": "base64"
        }
      },
      "xml": {
        "name": "Artefact"
      }
    },
    "Zone": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "Artefacts": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "acquisitionDate": {
                "type": "string",
                "format": "date-time"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "coordX": {
                "type": "number"
              },
              "coordY": {
                "type": "number"
              },
              "zoneId": {
                "type": "number"
              }
            }
          }
        },
        "Beacons": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "name": {
                "type": "string"
              },
              "visits": {
                "type": "integer",
                "format": "int64"
              },
              "macAddress": {
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "coordX": {
                "type": "number"
              },
              "coordY": {
                "type": "number"
              },
              "zoneId": {
                "type": "number"
              }
            }
          }
        },
        "media": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "src": {
                "type": "string"
              },
              "type": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "video",
                    "image"
                  ]
                }
              },
              "artefactId": {
                "type": "number"
              }
            }
          }
        }
      },
      "xml": {
        "name": "Medias"
      }
    },
    "Beacon": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "visits": {
          "type": "integer",
          "format": "int64"
        },
        "macAddress": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "coordX": {
          "type": "number"
        },
        "coordY": {
          "type": "number"
        },
        "zoneId": {
          "type": "number"
        }
      },
      "xml": {
        "name": "Beacon"
      }
    },
    "Exhibition": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "organiser": {
          "type": "string"
        },
        "priceAdult": {
          "type": "integer",
          "format": "double"
        },
        "priceConcession": {
          "type": "integer",
          "format": "double"
        },
        "priceChild": {
          "type": "integer",
          "format": "double"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "finishDate": {
          "type": "string",
          "format": "date-time"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "thumnail": {
          "type": "string",
          "format": "base64"
        }
      },
      "xml": {
        "name": "Exhibition"
      }
    },
    "StoreItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "organiser": {
          "type": "string"
        },
        "cost": {
          "type": "integer",
          "format": "double"
        },
        "inStock": {
          "type": "boolean"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "thumbnail": {
          "type": "string",
          "format": "base64"
        }
      },
      "xml": {
        "name": "StoreItems"
      }
    },
    "Media": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "src": {
          "type": "string"
        },
        "type": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "video",
              "image"
            ]
          }
        },
        "artefactId": {
          "type": "number"
        }
      },
      "xml": {
        "name": "Medias"
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "format": "password" 
        },
        "password": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Artefact"
      }
    }
  }
}