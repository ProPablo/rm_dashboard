server {
        #enable logging

        server_name rm.kongroo.xyz;

        # trailing slash needed
        location /api/ {
                proxy_pass http://127.0.0.1:3001/; #whatever port your app runs on
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_cache_bypass $http_upgrade;
        }


        location / {
                root /var/www/rm_dashboard/client/build;
                index index.html index.htm index.nginx-debian.html;

                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                try_files $uri $uri/ =404;
        }

        #Modifier enables case insensitive non regex match
        location /public {
                root /var/www/rm_dashboard/server/;
#               root /var/www/sample/;

                access_log /var/log/nginx/access_log combined;
                try_files $uri $uri/ =404;
        }

    listen [::]:443 ssl; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/rm.kongroo.xyz/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/rm.kongroo.xyz/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#       listen 80;
#       listen [::]:80;
#
#       server_name example.com;
#
#       root /var/www/example.com;
#       index index.html;
#
#       location / {
#               try_files $uri $uri/ =404;
#       }
#}
server {
    if ($host = rm.kongroo.xyz) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


        server_name rm.kongroo.xyz;

        listen 80 ;
        listen [::]:80 ;
    return 404; # managed by Certbot


}
